{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Single-cell RNA sequencing (scRNA-seq) technologies enable to define the gene expression profiles of single cells allowing the characterisation of heterogeneous cell populations. However, scRNA-seq lacks the spatial context because the tissue must be dissociated. To overcome this issue, spatial transcriptomics (ST) is a new and evolving technology that measures transcriptomic information while preserving spatial information. Consequently, ST can unravel the complexity of biology, especially the molecular mechanisms behind diseases that cannot be understood by other technologies. There are different ST techniques with different technical parameters, and there is often a trade-off between the number of genes profiled and the resolution level of the technology. In this tutorial, we will present an overview of the different methods currently available to perform ST, their strengths and drawbacks. The focus will be on the two main methods: spot-based (10x Visium) and in-situ (10x Xenium) technologies. Spot-based technology allows the detection of the whole transcriptome across an entire slice of tissue with high sensitivity and specificity, but it does not yield single-cell resolution. In contrast, the newest in-situ technology Xenium released at the end of 2022 allows us to have an extremely high resolution at subcellular level, but it can be biased due to the requirement of pre-selected gene targets. These two technologies can be complementary as Xenium data can be used to interpolate the cell composition of Visium spots and leverage Visium whole transcriptomics to understand tissue heterogeneity and discover new biomarkers. Therefore, in this tutorial, we will use computational tools to analyse Chromium single-cell RNA-seq, as well as Visium and Xenium data to show how whole transcriptome and targeted in-situ data can be integrated to provide highly complementary and additive biological information. Lectures and practical training will provide entry-level guidance for participants interested in ST data analysis. Learning outcomes At the end of this tutorial, attendees will understand how the different ST technologies work, and the advantages and limitations of each of the methods. This tutorial will provide the participants with theory and practical training to analyse ST data (Visium and Xenium), as well as a guide to the most recent computational tools to perform more advanced ST analysis. With the provided guidance of the instructors, participants will be able to independently analyse different ST data Exercises The course is divided into small blocks, with lectures and relevant practical exercises. We will comment/provide a demo of the practical exercises.","title":"Home"},{"location":"#overview","text":"Single-cell RNA sequencing (scRNA-seq) technologies enable to define the gene expression profiles of single cells allowing the characterisation of heterogeneous cell populations. However, scRNA-seq lacks the spatial context because the tissue must be dissociated. To overcome this issue, spatial transcriptomics (ST) is a new and evolving technology that measures transcriptomic information while preserving spatial information. Consequently, ST can unravel the complexity of biology, especially the molecular mechanisms behind diseases that cannot be understood by other technologies. There are different ST techniques with different technical parameters, and there is often a trade-off between the number of genes profiled and the resolution level of the technology. In this tutorial, we will present an overview of the different methods currently available to perform ST, their strengths and drawbacks. The focus will be on the two main methods: spot-based (10x Visium) and in-situ (10x Xenium) technologies. Spot-based technology allows the detection of the whole transcriptome across an entire slice of tissue with high sensitivity and specificity, but it does not yield single-cell resolution. In contrast, the newest in-situ technology Xenium released at the end of 2022 allows us to have an extremely high resolution at subcellular level, but it can be biased due to the requirement of pre-selected gene targets. These two technologies can be complementary as Xenium data can be used to interpolate the cell composition of Visium spots and leverage Visium whole transcriptomics to understand tissue heterogeneity and discover new biomarkers. Therefore, in this tutorial, we will use computational tools to analyse Chromium single-cell RNA-seq, as well as Visium and Xenium data to show how whole transcriptome and targeted in-situ data can be integrated to provide highly complementary and additive biological information. Lectures and practical training will provide entry-level guidance for participants interested in ST data analysis.","title":"Overview"},{"location":"#learning-outcomes","text":"At the end of this tutorial, attendees will understand how the different ST technologies work, and the advantages and limitations of each of the methods. This tutorial will provide the participants with theory and practical training to analyse ST data (Visium and Xenium), as well as a guide to the most recent computational tools to perform more advanced ST analysis. With the provided guidance of the instructors, participants will be able to independently analyse different ST data","title":"Learning outcomes"},{"location":"#exercises","text":"The course is divided into small blocks, with lectures and relevant practical exercises. We will comment/provide a demo of the practical exercises.","title":"Exercises"},{"location":"course_schedule/","text":"The course starts at 9am and ends at 4pm , with the following breaks (approximate times, please allow for some flexibility): Topic 9am Introduction and theoretical background on spatial transcriptomics (ST) 10:10am Practical session: loading and understanding ST data 10:30am Coffee break 10:45am Differences between spot-based and in-situ ST technology 11:00am Practical session : dimensionality reduction, marker genes 12:15pm Lunch break 1:00pm Practical session : spot-level deconvolution 2:00pm Theoretical and practical session : 10x Xenium integration with 10x Visium (part 1) 2:30pm Coffee break 2:45pm Theoretical and practical session : 10x Xenium integration with 10x Visium (part 2) Approx. 3:45pm Final discussions and end of course","title":"Course schedule"},{"location":"exercises/","text":"In this section, you will find the R code that we will use during the course. We will discuss the code and output during practical sessions. Source of data We will work with spatial transcriptomics data of human breast tumor, that was profiled using 3 10x technologies: Chromium scRNAseq on FFPE-fixed single cells, Visium on FFPE slide, and Xenium Janesick et al, bioRxiv . Before starting the exercises, set the working directory to where you have downloaded the data with the files for the exercises and load the necessary packages. An R script with custom functions will be made available to the participants privately. Make sure you source the script with the custom functions. On the materials page, you may also download an Rmd file that contains the code presented here. Warning When using setwd(), change the path within quotes to where you have saved the data for the exercises # Change the path here: setwd ( \"/path/to/whereDataFolderIsSaved/\" ) library ( here ) library ( Seurat ) library ( BayesSpace ) library ( ggplot2 ) library ( patchwork ) library ( dplyr ) library ( tibble ) library ( scater ) library ( grid ) library ( hrbrthemes ) library ( gridExtra ) library ( RColorBrewer ) myPalette <- colorRampPalette ( rev ( brewer.pal ( 11 , \"Spectral\" ))) source ( \"utils_new.R\" ) Import pre-processed Chromium data We will generate a Seurat object containing the Chromium scRNAseq data. The annotation of the cell types was performed by 10X using marker genes and a cell atlas reference. For the sake of time, we will directly load the saved Chromium data. # chrom_path <- \"path/to/where/filtered_feature_bc_matrix.h5/isSaved\" if ( FALSE ) { Counts <- Seurat :: Read10X_h5 ( paste0 ( chrom_path , \"filtered_feature_bc_matrix.h5\" )) # # 18082 30365 barcodes MT <- read.csv ( paste0 ( chrom_path , \"FFPE_cell_annotations.csv\" )) # 27472 barcodes MT <- column_to_rownames ( MT , \"Barcode\" ) overlap_cell_barcode <- intersect ( rownames ( MT ), colnames ( Counts )) # 27460 length ( overlap_cell_barcode ) Counts_ <- Counts [, colnames ( Counts ) %in% overlap_cell_barcode ] # 18082 27460 MT_ <- MT %>% filter ( rownames ( MT ) %in% overlap_cell_barcode ) # 27460 1 chrom <- CreateSeuratObject ( counts = Counts_ , meta.data = MT_ ) saveRDS ( chrom , \"./data/chrom_raw.rds\" ) } else { chrom <- readRDS ( \"data/chrom_raw.rds\" ) } We generate some QC plots of the scRNAseq data. chrom <- readRDS ( \"data/chrom_raw.rds\" ) chrom <- preprocess_SEU ( chrom ) chrom_libsize_drop <- chrom $ libsize_drop chrom_mito_drop <- chrom $ mito_drop chrom_lowgenecount_drop <- unlist ( chrom [[ \"RNA\" ]][[ \"lowgenecount_drop\" ]]) if ( any ( chrom_libsize_drop )){ p1 <- plot_Hist_Low_Lib_Sizes ( chrom ) } else { print ( \"No Chromium cells with low library size detected by scuttle::isOutlier()\" ) } if ( any ( chrom_mito_drop )){ p2 <- plot_Hist_High_Mito_Props ( chrom ) # TODO: check plot label } if ( any ( chrom_lowgenecount_drop )){ p3 <- plot_Hist_Low_Abun_Genes ( chrom ) } We retain the cells that pass QC, and save the Chromium reference for later use with cell-type deconvolution per spot. # Subset chrom <- chrom [ ! chrom_lowgenecount_drop , ! chrom_libsize_drop & ! chrom_mito_drop ] dim ( chrom ) # 14026 25817 # saveRDS(chrom, \"data/chrom_qcd.rds\") Visium analysis We import a Visium Seurat object, and visualize the per spot total count in 2D coordinates. vis_path <- \"path/to/Visium_FFPEfiles\" ? Load10X_spatial vis <- Load10X_Spatial ( vis_path ) Idents ( vis ) <- \"\" SpatialFeaturePlot ( vis , features = \"nCount_Spatial\" ) + theme ( legend.position = \"right\" ) # saveRDS(vis, \"data/vis_raw.rds\") Exercise (the last one ) -","title":"Exercises"},{"location":"exercises/#source-of-data","text":"We will work with spatial transcriptomics data of human breast tumor, that was profiled using 3 10x technologies: Chromium scRNAseq on FFPE-fixed single cells, Visium on FFPE slide, and Xenium Janesick et al, bioRxiv . Before starting the exercises, set the working directory to where you have downloaded the data with the files for the exercises and load the necessary packages. An R script with custom functions will be made available to the participants privately. Make sure you source the script with the custom functions. On the materials page, you may also download an Rmd file that contains the code presented here. Warning When using setwd(), change the path within quotes to where you have saved the data for the exercises # Change the path here: setwd ( \"/path/to/whereDataFolderIsSaved/\" ) library ( here ) library ( Seurat ) library ( BayesSpace ) library ( ggplot2 ) library ( patchwork ) library ( dplyr ) library ( tibble ) library ( scater ) library ( grid ) library ( hrbrthemes ) library ( gridExtra ) library ( RColorBrewer ) myPalette <- colorRampPalette ( rev ( brewer.pal ( 11 , \"Spectral\" ))) source ( \"utils_new.R\" )","title":"Source of data"},{"location":"exercises/#import-pre-processed-chromium-data","text":"We will generate a Seurat object containing the Chromium scRNAseq data. The annotation of the cell types was performed by 10X using marker genes and a cell atlas reference. For the sake of time, we will directly load the saved Chromium data. # chrom_path <- \"path/to/where/filtered_feature_bc_matrix.h5/isSaved\" if ( FALSE ) { Counts <- Seurat :: Read10X_h5 ( paste0 ( chrom_path , \"filtered_feature_bc_matrix.h5\" )) # # 18082 30365 barcodes MT <- read.csv ( paste0 ( chrom_path , \"FFPE_cell_annotations.csv\" )) # 27472 barcodes MT <- column_to_rownames ( MT , \"Barcode\" ) overlap_cell_barcode <- intersect ( rownames ( MT ), colnames ( Counts )) # 27460 length ( overlap_cell_barcode ) Counts_ <- Counts [, colnames ( Counts ) %in% overlap_cell_barcode ] # 18082 27460 MT_ <- MT %>% filter ( rownames ( MT ) %in% overlap_cell_barcode ) # 27460 1 chrom <- CreateSeuratObject ( counts = Counts_ , meta.data = MT_ ) saveRDS ( chrom , \"./data/chrom_raw.rds\" ) } else { chrom <- readRDS ( \"data/chrom_raw.rds\" ) } We generate some QC plots of the scRNAseq data. chrom <- readRDS ( \"data/chrom_raw.rds\" ) chrom <- preprocess_SEU ( chrom ) chrom_libsize_drop <- chrom $ libsize_drop chrom_mito_drop <- chrom $ mito_drop chrom_lowgenecount_drop <- unlist ( chrom [[ \"RNA\" ]][[ \"lowgenecount_drop\" ]]) if ( any ( chrom_libsize_drop )){ p1 <- plot_Hist_Low_Lib_Sizes ( chrom ) } else { print ( \"No Chromium cells with low library size detected by scuttle::isOutlier()\" ) } if ( any ( chrom_mito_drop )){ p2 <- plot_Hist_High_Mito_Props ( chrom ) # TODO: check plot label } if ( any ( chrom_lowgenecount_drop )){ p3 <- plot_Hist_Low_Abun_Genes ( chrom ) } We retain the cells that pass QC, and save the Chromium reference for later use with cell-type deconvolution per spot. # Subset chrom <- chrom [ ! chrom_lowgenecount_drop , ! chrom_libsize_drop & ! chrom_mito_drop ] dim ( chrom ) # 14026 25817 # saveRDS(chrom, \"data/chrom_qcd.rds\")","title":"Import pre-processed Chromium data"},{"location":"exercises/#visium-analysis","text":"We import a Visium Seurat object, and visualize the per spot total count in 2D coordinates. vis_path <- \"path/to/Visium_FFPEfiles\" ? Load10X_spatial vis <- Load10X_Spatial ( vis_path ) Idents ( vis ) <- \"\" SpatialFeaturePlot ( vis , features = \"nCount_Spatial\" ) + theme ( legend.position = \"right\" ) # saveRDS(vis, \"data/vis_raw.rds\")","title":"Visium analysis"},{"location":"exercises/#exercise-the-last-one-","text":"","title":"Exercise  (the last one  ) -"},{"location":"links/","text":"Seurat for single-cell and spatial transcriptomics analysis https://satijalab.org/seurat/ OSTA book Orchestrating Spatially-Resolved Transcriptomics Analysis with Bioconductor https://lmweber.org/OSTA-book/ SIB\u2019s scRNAseq analysis course Introduction to scRNAseq analysis with R (for 10x Chromium and other technologies) https://sib-swiss.github.io/single-cell-training/ Museum of spatial transcriptomics , Moses & Pachter 2022, Nature Methods https://www.nature.com/articles/s41592-022-01409-2","title":"Useful links"},{"location":"materials/","text":"Material Slides of lectures will be shared via a private link. Code and data for exercises Rmarkdown file","title":"Materials"},{"location":"materials/#material","text":"Slides of lectures will be shared via a private link.","title":"Material"},{"location":"materials/#code-and-data-for-exercises","text":"Rmarkdown file","title":"Code and data for exercises"},{"location":"precourse/","text":"R and RStudio Previous knowledge / Competencies This tutorial is designed for individuals interested in spatial transcriptomics data analysis. Participants must possess a basic understanding of R and RNA-seq gene expression method and data format. A basic understanding of single-cell RNA sequencing data analysis with R is a plus. Participants should bring a laptop with Wi-Fi, the latest versions of R, Rstudio, and relevant R packages installed (see below). Technical To be able to perform the exercises, participants should install the latest the version of R and the free version of RStudio . Install the necessary packages using: # Packages to install install.packages ( \"here\" ) # install.packages(\"Seurat\") # do not install version v. 4.9.9.9050 install.packages ( \"https://cran.r-project.org/src/contrib/Seurat_4.3.0.1.tar.gz\" , type = \"source\" , repos = NULL ) install.packages ( \"https://cran.r-project.org/src/contrib/SeuratObject_4.1.3.tar.gz\" , type = \"source\" , repos = NULL ) install.packages ( \"BiocManager\" ) BiocManager :: install ( \"BayesSpace\" ) install.packages ( \"ggplot2\" ) install.packages ( \"patchwork\" ) install.packages ( \"dplyr\" ) install.packages ( \"tibble\" ) BiocManager :: install ( \"scater\" ) install.packages ( \"hrbrthemes\" ) install.packages ( \"gridExtra\" ) install.packages ( \"RColorBrewer\" ) install.packages ( \"devtools\" ) install.packages ( \"hdf5r\" ) install.packages ( \"https://cran.r-project.org/src/contrib/Seurat_4.3.0.1.tar.gz\" , type = \"source\" , repos = NULL ) install.packages ( \"https://cran.r-project.org/src/contrib/SeuratObject_4.1.3.tar.gz\" , type = \"source\" , repos = NULL ) # If using RCTD: # devtools::install_github(\"dmcable/spacexr\", build_vignettes = FALSE)","title":"Precourse preparations"},{"location":"precourse/#r-and-rstudio","text":"","title":"R and RStudio"},{"location":"precourse/#previous-knowledge-competencies","text":"This tutorial is designed for individuals interested in spatial transcriptomics data analysis. Participants must possess a basic understanding of R and RNA-seq gene expression method and data format. A basic understanding of single-cell RNA sequencing data analysis with R is a plus. Participants should bring a laptop with Wi-Fi, the latest versions of R, Rstudio, and relevant R packages installed (see below).","title":"Previous knowledge / Competencies"},{"location":"precourse/#technical","text":"To be able to perform the exercises, participants should install the latest the version of R and the free version of RStudio . Install the necessary packages using: # Packages to install install.packages ( \"here\" ) # install.packages(\"Seurat\") # do not install version v. 4.9.9.9050 install.packages ( \"https://cran.r-project.org/src/contrib/Seurat_4.3.0.1.tar.gz\" , type = \"source\" , repos = NULL ) install.packages ( \"https://cran.r-project.org/src/contrib/SeuratObject_4.1.3.tar.gz\" , type = \"source\" , repos = NULL ) install.packages ( \"BiocManager\" ) BiocManager :: install ( \"BayesSpace\" ) install.packages ( \"ggplot2\" ) install.packages ( \"patchwork\" ) install.packages ( \"dplyr\" ) install.packages ( \"tibble\" ) BiocManager :: install ( \"scater\" ) install.packages ( \"hrbrthemes\" ) install.packages ( \"gridExtra\" ) install.packages ( \"RColorBrewer\" ) install.packages ( \"devtools\" ) install.packages ( \"hdf5r\" ) install.packages ( \"https://cran.r-project.org/src/contrib/Seurat_4.3.0.1.tar.gz\" , type = \"source\" , repos = NULL ) install.packages ( \"https://cran.r-project.org/src/contrib/SeuratObject_4.1.3.tar.gz\" , type = \"source\" , repos = NULL ) # If using RCTD: # devtools::install_github(\"dmcable/spacexr\", build_vignettes = FALSE)","title":"Technical"}]}